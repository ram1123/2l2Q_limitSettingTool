name: Deploy Jekyll with GitHub Pages dependencies preinstalled

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Sphinx Theme and recommonmark
        run: pip install sphinx sphinx_rtd_theme recommonmark

      - name: Generate API Documentation
        run: sphinx-apidoc -f -o docs/source .

      - name: Generate Sphinx Documentation
        run: |
          cd docs
          make html

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Build with Jekyll
        uses: actions/jekyll-build-pages@v1
        with:
          source: ./
          destination: ./_site

      - name: Cache Python dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: ${{ runner.os }}-pip-

      - name: Debug - Show current working directory and list files
        run: |
          pwd
          ls -l docs/
          ls -l docs/build/
          ls -l docs/build/html/

      - name: Create sphinx-docs directory
        run: sudo mkdir -p _site/sphinx-docs

      - name: Debug permissions and ownership
        run: |
          ls -l _site
          ls -lha

      - name: Copy Sphinx Documentation to Jekyll Site
        run: sudo cp -r docs/build/html/* _site/sphinx-docs/

      - name: Check artifact size
        run: du -sh _site/
      
      - name: Check for symlinks or hard links
        run: find _site/ \( -type l -o -type h \) -ls

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: github-pages
          path: _site/

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact  # <-- Add this step
        uses: actions/download-artifact@v2
        with:
          name: github-pages
  
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
